// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
// or vendor/assets/javascripts of plugins, if any, can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// compiled file.
//
// Read Sprockets README (https://github.com/sstephenson/sprockets#sprockets-directives) for details
// about supported directives.
//
//= require jquery
//= require jquery_ujs
//= require_tree .
//= require cbpAnimatedHeader
//= require classie
//= require countdown
//= require freelancer
//= require twitter/typeahead
//= require handlebars
//= require skrollr.min
//= require jquery.easing.min
$(document).ready(function (){
    <%
        imgs = {}
        Dir.chdir("#{Rails.root}/app/assets/images/game-images") do
        imgs = Dir["**"].inject({}) {|h,f| h.merge! f => image_url('game-images/' + f)}
        end
    %>

    localStorage.clear();

    var target = document.location.hash;

    $(target).modal('show');

    window.image_url = function (name) {
            return <%= imgs.to_json %>[name]
    };

    window.getCover = function (cover){
        return image_url(cover.getAttribute('data-name') + "-cover.jpg");
    };

    setInterval(function(){updateTime()},1000);

    function updateTime(){
        var countdownToParty = countdown(Date.now(),new Date(gon.eventtime));
        if (countdownToParty.value > 0){
            $('#countdown-box').show();
            $('.unit').each(function () {
                var count = countdownToParty[$(this).data('count')];
                var singular = $(this).data('singular');
                var plural = $(this).data('plural');

                $(this).find('h2').html(function () {
                    return count;
                });

                $(this).find('p').html(function () {
                    if (count == 1) {
                        return singular;
                    }
                    else {
                        return plural;
                    }
                });
            });
        }else if(countdownToParty.value < -36000000) {
            $('#more-info').show();
        }else{
            $('#playing-now').show();
        }

    }
    updateTime();

    $('.img-header').mousemove(function(e){
        var mousePosX = (e.pageX/$(window).width())*100;
        var mousePosY = (e.pageY/$(window).height())*100;
        $(this).css('backgroundPosition', mousePosX +'% '+mousePosY+'%');
    });

    $('#sign_up').popover({
        html: true,
        content : function() {
            return $('#attend-popover').html();
        },
        placement : 'bottom'

    });

    $( ".btn-create-team" ).click(function() {
        $('#create-team-modal').modal('hide');
    });


    $('[data-toggle="tooltip"]').tooltip({html: true});





    $('#attending-list').popover({
        html: true,
        content : function() {
            return $('#attending-list-tooltip').html();
        },
        template : '<div class="popover attend-popover" role="tooltip"><h3 class="popover-title"></h3><div class="popover-content attend-popover-content"></div></div>',
        placement : 'bottom',
        trigger : 'hover'
    });

    $('[data-toggle="popover"]').popover({
        html: true,
        template : '<div class="popover trn-sign-up-popover" role="tooltip"><h3 class="popover-title"></h3><div class="popover-content trn-sign-up-popover-content"></div></div>',
        placement : 'bottom',
        trigger : 'click'
    });

    $('#alert-toggle').popover({
        html: true,
        content : function() {
            return $('#alert-popover').html();
        },
        template : '<div class="popover alert-popover user-popover" role="tooltip"><h3 class="popover-title"></h3><div class="popover-content user-popover-content"></div></div>',
        placement: 'bottom',
        trigger: 'click'
    }).on('show.bs.popover', function(){
        $('#user-info-toggle').popover('hide');
    });

    $('#user-info-toggle').popover({
        html: true,
        content : function() {
            return $('#user-info-popover').html();
        },
        template : '<div class="popover user-popover" role="tooltip"><h3 class="popover-title"></h3><div class="popover-content user-popover-content"></div></div>',
        placement : 'bottom',
        trigger : 'click'
    }).on('show.bs.popover', function(){
        $('#alert-toggle').popover('hide');
    });

    $('body').tooltip({
        selector: '[data-tooltip=tooltip]'}
    );


    $(".modal-content, .trn-background").css({
        "background" : function (){
            var url = getCover(this);
            return "url(" + url +") no-repeat center center fixed";
        },
        "-webkit-background-size": "cover",
        "-moz-background-size": "cover",
        "-o-background-size": "cover",
        "background-size": "cover"
    });

    $('.dropdown').on("click", ".team-options", function() {
        $('#menu-team-' + $(this).data('team') + '-options').removeClass("hidden");
        $('#menu-team-' + $(this).data('team')).addClass("hidden");
    });

    $('.dropdown').on("click", ".team-options-back", function() {
        $('#menu-team-' + $(this).data('team') + '-options').addClass("hidden");
        $('#menu-team-' + $(this).data('team')).removeClass("hidden");
    });

    /*$( ".team-options" ).on( "click", function() {
        alert('hello');
        $('#menu-team-' + $(this).data('team') + '-options').removeClass("hidden");
        $('#menu-team-' + $(this).data('team')).addClass("hidden");
    });

    $( ".team-options-back" ).on( "click", function() {
        $('#menu-team-' + $(this).data('team') + '-options').addClass("hidden");
        $('#menu-team-' + $(this).data('team')).removeClass("hidden");
    });*/

    // Twitter typeahead exmaple.

    // instantiate the bloodhound suggestion engine
    var teams = new Bloodhound({
        datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
        queryTokenizer: Bloodhound.tokenizers.whitespace,
        limit: 10,
        cacheKey: "teams",
        ttl: 0,
        prefetch: {
            url: '../teams/show.json',
            filter: function (list) {
                return $.map(list, function (team) {
                    return {
                        name: team.name,
                        id: team.id,
                        hasPass: team.hasPass,
                        owner_uid: team.owner_uid
                    };
                });

            }
        }
    });

    // initialize the bloodhound suggestion engine
    teams.initialize();

    var users = new Bloodhound({
        datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
        queryTokenizer: Bloodhound.tokenizers.whitespace,
        limit: 10,
        cacheKey: "users",
        ttl: 0,
        prefetch: {
            url: '../users/show.json',
            filter: function (list) {
                return $.map(list, function (user) {
                    return {
                        name: user.name,
                        uid: user.uid,
                        id: user.id
                    };
                });

            }
        }
    });

    users.initialize();
    $('#user-searcher').typeahead(null, {
        displayKey: 'name',
        minLength: 0,
        source: users.ttAdapter(),
        templates: {
            suggestion: Handlebars.compile([
                '<img class="img-circle own-profile-img" src="http://graph.facebook.com/{{uid}}/picture?height=65&width=65">',
                '<p>{{name}}</p>',
                '<i class="fa fa-lock password-lock password-{{hasPass}}"></i>'
            ].join(''))
        }
    }).on('typeahead:selected', function (e, datum) {
        $('#invite_user_id').val(datum.id);
        $('#invite-form').submit();
        $('#invite-team-modal').modal('hide');
    });

    $(document).on("click", ".team-button-i", function() {
        $('#invite_team_id').val($(this).data('team'));
    });

    // instantiate the typeahead UI
    $('#team-searcher').typeahead(null, {
        displayKey: 'name',
        minLength: 0,
        source: teams.ttAdapter(),
        templates: {
            suggestion: Handlebars.compile([
                '<img class="img-circle own-profile-img" src="http://graph.facebook.com/{{owner_uid}}/picture?height=65&width=65">',
                '<p>{{name}}</p>',
                '<i class="fa fa-lock password-lock password-{{hasPass}}"></i>'
            ].join(''))
        }
    }).on('typeahead:selected', function (e, datum) {
            $('#team_id').val(datum.id);
            if(datum.hasPass){
                $('#join-team-modal').modal('hide');
                $('#team-password-modal').modal('show')
            }
            else{
                $('#join-team-modal').modal('hide');
                $('#team-form').submit();
            }
        }).on('typeahead:closed', function(e, d) {
            $('#team-searcher').typeahead('open');
        });

    $('#team-form').on('submit', function(){
        $('#team-password-modal').modal('hide');
    })

    (function(d, s, id){
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) {return;}
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/en_US/sdk.js";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));
});




